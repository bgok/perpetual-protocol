{
  "manifestVersion": "3.1",
  "impls": {
    "8e531268d8c7374bd8b963c684d462f4369a0db72fa5c94388edba07b68b5134": {
      "address": "0x9fe69355bB40a8FF51669E6E9127DFa99869ec93",
      "txHash": "0x3dec06cc23fd2730b599a82cd07ebd3f718017a2cf235f427a354a21e6031375",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "ChainlinkL1",
            "label": "priceFeedMap",
            "type": "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)",
            "src": "src/ChainlinkL1.sol:27"
          },
          {
            "contract": "ChainlinkL1",
            "label": "priceFeedKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "src/ChainlinkL1.sol:28"
          },
          {
            "contract": "ChainlinkL1",
            "label": "priceFeedL2",
            "type": "t_contract(IPriceFeed)26682",
            "src": "src/ChainlinkL1.sol:29"
          },
          {
            "contract": "ChainlinkL1",
            "label": "prevTimestampMap",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "src/ChainlinkL1.sol:30"
          },
          {
            "contract": "ChainlinkL1",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/ChainlinkL1.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_contract(AggregatorV3Interface)45)": {
            "label": "mapping(bytes32 => contract AggregatorV3Interface)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_contract(IPriceFeed)26682": {
            "label": "contract IPriceFeed"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a4953a2946c1527954b1f1b221b6b0adf96c27466edeb5707ea10a13dc3b4e8e": {
      "address": "0x07Ae972dEF111A3ac5A88767417848626d696b29",
      "txHash": "0x0cdfe9817cda76c741cf30bd8d10838b8a684e4aa7898219ff51d50acbd17009",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "LowLevelErrorMessage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/LowLevelErrorMessage.sol:15"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL1",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:53"
          },
          {
            "contract": "MetaTxGateway",
            "label": "domainSeperatorL2",
            "type": "t_bytes32",
            "src": "src/MetaTxGateway.sol:54"
          },
          {
            "contract": "MetaTxGateway",
            "label": "nonces",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/MetaTxGateway.sol:55"
          },
          {
            "contract": "MetaTxGateway",
            "label": "whitelistMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/MetaTxGateway.sol:58"
          },
          {
            "contract": "MetaTxGateway",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/MetaTxGateway.sol:74"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f52e949f2c1d0ab1f22c75ed252719166aac648a37ca9fdf3b7832ad206c2c2": {
      "address": "0x6D377fe4C99d66b4b581Ff36072ED38A2F8A4A23",
      "txHash": "0x11c6746859e29693cb7f231227f18a68f9c7bd18a5f8cce2a7849ee2510448b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "InsuranceFund",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:37"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokenMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "src/InsuranceFund.sol:38"
          },
          {
            "contract": "InsuranceFund",
            "label": "amms",
            "type": "t_array(t_contract(IAmm)26371)dyn_storage",
            "src": "src/InsuranceFund.sol:39"
          },
          {
            "contract": "InsuranceFund",
            "label": "quoteTokens",
            "type": "t_array(t_contract(IERC20)2022)dyn_storage",
            "src": "src/InsuranceFund.sol:40"
          },
          {
            "contract": "InsuranceFund",
            "label": "exchange",
            "type": "t_contract(IExchangeWrapper)26535",
            "src": "src/InsuranceFund.sol:43"
          },
          {
            "contract": "InsuranceFund",
            "label": "perpToken",
            "type": "t_contract(IERC20)2022",
            "src": "src/InsuranceFund.sol:44"
          },
          {
            "contract": "InsuranceFund",
            "label": "minter",
            "type": "t_contract(IMinter)26602",
            "src": "src/InsuranceFund.sol:45"
          },
          {
            "contract": "InsuranceFund",
            "label": "inflationMonitor",
            "type": "t_contract(IInflationMonitor)26551",
            "src": "src/InsuranceFund.sol:46"
          },
          {
            "contract": "InsuranceFund",
            "label": "beneficiary",
            "type": "t_address",
            "src": "src/InsuranceFund.sol:47"
          },
          {
            "contract": "InsuranceFund",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/InsuranceFund.sol:63"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_contract(IAmm)26371)dyn_storage": {
            "label": "contract IAmm[]"
          },
          "t_contract(IAmm)26371": {
            "label": "contract IAmm"
          },
          "t_array(t_contract(IERC20)2022)dyn_storage": {
            "label": "contract IERC20[]"
          },
          "t_contract(IERC20)2022": {
            "label": "contract IERC20"
          },
          "t_contract(IExchangeWrapper)26535": {
            "label": "contract IExchangeWrapper"
          },
          "t_contract(IMinter)26602": {
            "label": "contract IMinter"
          },
          "t_contract(IInflationMonitor)26551": {
            "label": "contract IInflationMonitor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4909f3ce162e5c8598ffe9bc881cdd48c1250b477602f8f0244a78414aa2b659": {
      "address": "0xEc322dC5f096993baB8d66efbD6Efa4d62B547B4",
      "txHash": "0xc874378cc4dfe88745b15176cb6eaa7b01aa3fad33ebf0094072812d0ff70927",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "L2PriceFeed",
            "label": "chainlink",
            "type": "t_address",
            "src": "src/L2PriceFeed.sol:34"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedMap",
            "type": "t_mapping(t_bytes32,t_struct(PriceFeed)20617_storage)",
            "src": "src/L2PriceFeed.sol:37"
          },
          {
            "contract": "L2PriceFeed",
            "label": "priceFeedKeys",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "src/L2PriceFeed.sol:38"
          },
          {
            "contract": "L2PriceFeed",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/L2PriceFeed.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(PriceFeed)20617_storage)": {
            "label": "mapping(bytes32 => struct L2PriceFeed.PriceFeed)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(PriceFeed)20617_storage": {
            "label": "struct L2PriceFeed.PriceFeed",
            "members": [
              {
                "label": "registered",
                "type": "t_bool"
              },
              {
                "label": "priceData",
                "type": "t_array(t_struct(PriceData)20611_storage)dyn_storage"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(PriceData)20611_storage)dyn_storage": {
            "label": "struct L2PriceFeed.PriceData[]"
          },
          "t_struct(PriceData)20611_storage": {
            "label": "struct L2PriceFeed.PriceData",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint256"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a89b27be5520a32a1d88de9d4a501c7e33ab286a674ff8caabc52e02bd521d8e": {
      "address": "0xb5839d7DEcCdd114ac9C7b899e164Fa0dFf66497",
      "txHash": "0x119363cc698e03f0cad381492ec2145ed94440ecfb243563bbcc61f87def0ed2",
      "layout": {
        "storage": [
          {
            "contract": "DecimalERC20",
            "label": "decimalMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "src/utils/DecimalERC20.sol:12"
          },
          {
            "contract": "DecimalERC20",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/DecimalERC20.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:26"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/Pausable.sol:84"
          },
          {
            "contract": "OwnerPausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/OwnerPausable.sol:22"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ClearingHouse",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "src/ClearingHouse.sol:161"
          },
          {
            "contract": "ClearingHouse",
            "label": "initMarginRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/ClearingHouse.sol:164"
          },
          {
            "contract": "ClearingHouse",
            "label": "maintenanceMarginRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/ClearingHouse.sol:167"
          },
          {
            "contract": "ClearingHouse",
            "label": "liquidationFeeRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/ClearingHouse.sol:170"
          },
          {
            "contract": "ClearingHouse",
            "label": "openInterestNotionalMap",
            "type": "t_mapping(t_address,t_struct(decimal)33205_storage)",
            "src": "src/ClearingHouse.sol:174"
          },
          {
            "contract": "ClearingHouse",
            "label": "ammMap",
            "type": "t_mapping(t_address,t_struct(AmmMap)15206_storage)",
            "src": "src/ClearingHouse.sol:177"
          },
          {
            "contract": "ClearingHouse",
            "label": "prepaidBadDebt",
            "type": "t_mapping(t_address,t_struct(decimal)33205_storage)",
            "src": "src/ClearingHouse.sol:180"
          },
          {
            "contract": "ClearingHouse",
            "label": "insuranceFund",
            "type": "t_contract(IInsuranceFund)26581",
            "src": "src/ClearingHouse.sol:183"
          },
          {
            "contract": "ClearingHouse",
            "label": "feePool",
            "type": "t_contract(IMultiTokenRewardRecipient)26617",
            "src": "src/ClearingHouse.sol:184"
          },
          {
            "contract": "ClearingHouse",
            "label": "whitelist",
            "type": "t_address",
            "src": "src/ClearingHouse.sol:187"
          },
          {
            "contract": "ClearingHouse",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/ClearingHouse.sol:189"
          },
          {
            "contract": "ClearingHouse",
            "label": "partialLiquidationRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/ClearingHouse.sol:197"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(decimal)33205_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(decimal)33205_storage)": {
            "label": "mapping(address => struct Decimal.decimal)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(AmmMap)15206_storage)": {
            "label": "mapping(address => struct ClearingHouse.AmmMap)"
          },
          "t_struct(AmmMap)15206_storage": {
            "label": "struct ClearingHouse.AmmMap",
            "members": [
              {
                "label": "lastRestrictionBlock",
                "type": "t_uint256"
              },
              {
                "label": "cumulativePremiumFractions",
                "type": "t_array(t_struct(signedDecimal)34723_storage)dyn_storage"
              },
              {
                "label": "positionMap",
                "type": "t_mapping(t_address,t_struct(Position)15179_storage)"
              }
            ]
          },
          "t_array(t_struct(signedDecimal)34723_storage)dyn_storage": {
            "label": "struct SignedDecimal.signedDecimal[]"
          },
          "t_struct(signedDecimal)34723_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Position)15179_storage)": {
            "label": "mapping(address => struct ClearingHouse.Position)"
          },
          "t_struct(Position)15179_storage": {
            "label": "struct ClearingHouse.Position",
            "members": [
              {
                "label": "size",
                "type": "t_struct(signedDecimal)34723_storage"
              },
              {
                "label": "margin",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "openNotional",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "lastUpdatedCumulativePremiumFraction",
                "type": "t_struct(signedDecimal)34723_storage"
              },
              {
                "label": "liquidityHistoryIndex",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_contract(IInsuranceFund)26581": {
            "label": "contract IInsuranceFund"
          },
          "t_contract(IMultiTokenRewardRecipient)26617": {
            "label": "contract IMultiTokenRewardRecipient"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          }
        }
      }
    },
    "ab43fc88b0aedb2da830eb7eb791f9edc0e98244196787e33f80d4520e507bc2": {
      "address": "0x77Dcb88F684a9FAfD413c732aE09950D78cF147f",
      "txHash": "0xac3c9649774e1f7591e3422f6d8566e62a8fee7c9caa2321992bb8f7698ada39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_owner",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:20"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "_candidate",
            "type": "t_address",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:21"
          },
          {
            "contract": "PerpFiOwnableUpgrade",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/PerpFiOwnableUpgrade.sol:99"
          },
          {
            "contract": "BlockContext",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/utils/BlockContext.sol:13"
          },
          {
            "contract": "Amm",
            "label": "baseAssetDeltaThisFundingPeriod",
            "type": "t_struct(signedDecimal)34723_storage",
            "src": "src/Amm.sol:97"
          },
          {
            "contract": "Amm",
            "label": "totalPositionSize",
            "type": "t_struct(signedDecimal)34723_storage",
            "src": "src/Amm.sol:100"
          },
          {
            "contract": "Amm",
            "label": "fundingRate",
            "type": "t_struct(signedDecimal)34723_storage",
            "src": "src/Amm.sol:103"
          },
          {
            "contract": "Amm",
            "label": "cumulativeNotional",
            "type": "t_struct(signedDecimal)34723_storage",
            "src": "src/Amm.sol:105"
          },
          {
            "contract": "Amm",
            "label": "settlementPrice",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:107"
          },
          {
            "contract": "Amm",
            "label": "tradeLimitRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:108"
          },
          {
            "contract": "Amm",
            "label": "quoteAssetReserve",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:109"
          },
          {
            "contract": "Amm",
            "label": "baseAssetReserve",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:110"
          },
          {
            "contract": "Amm",
            "label": "fluctuationLimitRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:111"
          },
          {
            "contract": "Amm",
            "label": "tollRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:114"
          },
          {
            "contract": "Amm",
            "label": "spreadRatio",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:115"
          },
          {
            "contract": "Amm",
            "label": "tollAmount",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:116"
          },
          {
            "contract": "Amm",
            "label": "maxHoldingBaseAsset",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:117"
          },
          {
            "contract": "Amm",
            "label": "openInterestNotionalCap",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:118"
          },
          {
            "contract": "Amm",
            "label": "cumulativePositionMultiplier",
            "type": "t_struct(decimal)33205_storage",
            "src": "src/Amm.sol:121"
          },
          {
            "contract": "Amm",
            "label": "liquidityChangedSnapshots",
            "type": "t_array(t_struct(LiquidityChangedSnapshot)26180_storage)dyn_storage",
            "src": "src/Amm.sol:124"
          },
          {
            "contract": "Amm",
            "label": "spotPriceTwapInterval",
            "type": "t_uint256",
            "src": "src/Amm.sol:126"
          },
          {
            "contract": "Amm",
            "label": "fundingPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:127"
          },
          {
            "contract": "Amm",
            "label": "fundingBufferPeriod",
            "type": "t_uint256",
            "src": "src/Amm.sol:128"
          },
          {
            "contract": "Amm",
            "label": "nextFundingTime",
            "type": "t_uint256",
            "src": "src/Amm.sol:129"
          },
          {
            "contract": "Amm",
            "label": "priceFeedKey",
            "type": "t_bytes32",
            "src": "src/Amm.sol:130"
          },
          {
            "contract": "Amm",
            "label": "reserveSnapshots",
            "type": "t_array(t_struct(ReserveSnapshot)11256_storage)dyn_storage",
            "src": "src/Amm.sol:131"
          },
          {
            "contract": "Amm",
            "label": "counterParty",
            "type": "t_address",
            "src": "src/Amm.sol:133"
          },
          {
            "contract": "Amm",
            "label": "globalShutdown",
            "type": "t_address",
            "src": "src/Amm.sol:134"
          },
          {
            "contract": "Amm",
            "label": "quoteAsset",
            "type": "t_contract(IERC20)2022",
            "src": "src/Amm.sol:135"
          },
          {
            "contract": "Amm",
            "label": "priceFeed",
            "type": "t_contract(IPriceFeed)26682",
            "src": "src/Amm.sol:136"
          },
          {
            "contract": "Amm",
            "label": "open",
            "type": "t_bool",
            "src": "src/Amm.sol:137"
          },
          {
            "contract": "Amm",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "src/Amm.sol:138"
          }
        ],
        "types": {
          "t_struct(signedDecimal)34723_storage": {
            "label": "struct SignedDecimal.signedDecimal",
            "members": [
              {
                "label": "d",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_struct(decimal)33205_storage": {
            "label": "struct Decimal.decimal",
            "members": [
              {
                "label": "d",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(LiquidityChangedSnapshot)26180_storage)dyn_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot[]"
          },
          "t_struct(LiquidityChangedSnapshot)26180_storage": {
            "label": "struct IAmm.LiquidityChangedSnapshot",
            "members": [
              {
                "label": "cumulativeNotional",
                "type": "t_struct(signedDecimal)34723_storage"
              },
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "totalPositionSize",
                "type": "t_struct(signedDecimal)34723_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_struct(ReserveSnapshot)11256_storage)dyn_storage": {
            "label": "struct Amm.ReserveSnapshot[]"
          },
          "t_struct(ReserveSnapshot)11256_storage": {
            "label": "struct Amm.ReserveSnapshot",
            "members": [
              {
                "label": "quoteAssetReserve",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "baseAssetReserve",
                "type": "t_struct(decimal)33205_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)2022": {
            "label": "contract IERC20"
          },
          "t_contract(IPriceFeed)26682": {
            "label": "contract IPriceFeed"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x9d17a6d7c47922fe6b5276f555598C8437188423",
    "txHash": "0x988f5947c2bd8d358b8efe2ad7eba188b96374279b0e46664bf5a3f6cfb9db74"
  }
}
